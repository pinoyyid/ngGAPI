"use strict";var NgGapi;!function(a){!function(a){a[a.ON_DEMAND=0]="ON_DEMAND",a[a.PRIOR_TO_EXPIRY=1]="PRIOR_TO_EXPIRY"}(a.TokenRefreshPolicy||(a.TokenRefreshPolicy={}));var b=(a.TokenRefreshPolicy,function(){function a(a,b,c,d,e,f,g,h,i,j,k,l,m,n){this.scopes=a,this.clientId=b,this.tokenRefreshPolicy=c,this.immediateMode=d,this.ownGetAccessTokenFunction=e,this.testingRefreshToken=f,this.testingAccessToken=g,this.testingClientSecret=h,this.popupBlockedFunction=i,this.$log=j,this.$window=k,this.$http=l,this.$timeout=m,this.$q=n,this.sig="OauthService",this.isAuthInProgress=!1,this.isAuthedYet=!1,this.GAPI_RETRY_MS=200,this.POPUP_BLOCKER_ALERT_DELAY=1e4,this.POPUP_BLOCKER_ALERT_TEXT="This app is requesting your authorization, but isn't able to, possibly because you have blocked popups from this site.",e&&(this.getAccessToken=e),d&&(this.isAuthedYet=!0)}return a.prototype.getAccessToken=function(a){var b=this;if(console.log("o88 gAT"),a||(a=this.$q.defer()),this.testingAccessToken)return console.log("returning "+this.testingAccessToken.access_token),a.resolve(this.testingAccessToken),a.promise;if(this.testingRefreshToken&&this.refreshAccessTokenUsingTestRefreshToken(this.testingRefreshToken,this.testingClientSecret,a),!this.isGapiLoaded()){var c="[O55] waiting for the gapi script to download";return this.$log.warn(c),this.testStatus="O55",a.notify(c),this.$timeout(function(){b.getAccessToken(a)},200),a.promise}return this.$window.gapi.auth.getToken()&&this.$window.gapi.auth.getToken().access_token&&null!=this.$window.gapi.auth.getToken().access_token?a.resolve(this.$window.gapi.auth.getToken()):(this.refreshAccessToken(a),a.notify("[O121] refreshing token")),a.promise},a.prototype.refreshAccessToken=function(a){var b=this;if(a||(a=this.$q.defer()),this.isAuthInProgress)return this.$log.warn("[O75] refresh access token suppressed because there is already such a request in progress"),this.testStatus="O75",a.promise;if(this.refreshException=void 0,!this.isGapiLoaded())return this.$log.warn("[O81] gapi not yet loaded, retrying..."),this.testStatus="O81",this.$timeout(function(){b.refreshAccessToken(a)},this.GAPI_RETRY_MS),a.promise;this.isAuthInProgress=!0;try{if(this.POPUP_BLOCKER_ALERT_DELAY>0)var c=this.$timeout(function(){console.log("auth timed out after "+b.POPUP_BLOCKER_ALERT_DELAY+"ms. Resetting anti-concurrent-calls flag so the next call to getAccesstoken() will trigger a fresh request"),b.popupBlockedFunction?b.popupBlockedFunction():b.POPUP_BLOCKER_ALERT_TEXT&&alert(b.POPUP_BLOCKER_ALERT_TEXT),a.reject("[O163] popup blocker timeout fired"),b.isAuthInProgress=!1},this.POPUP_BLOCKER_ALERT_DELAY);this.$window.gapi.auth.authorize({client_id:this.clientId,scope:this.scopes,immediate:this.isAuthedYet},function(d){b.$timeout.cancel(c),b.refreshCallback(d,a)})}catch(d){this.$log.error("[O153] exception calling gapi.auth.authorize "+d),this.isAuthInProgress=!1}return a.promise},a.prototype.refreshAccessTokenUsingTestRefreshToken=function(a,b,c){var d=this;if(this.isAuthInProgress)return this.$log.warn("[O143] refresh access token suppressed because there is already such a request in progress"),this.testStatus="O143",c.promise;this.isAuthInProgress=!0;var e="https://www.googleapis.com/oauth2/v3/token";this.$http({method:"POST",url:e,params:{client_id:encodeURI(this.clientId),client_secret:encodeURI(b),refresh_token:a,grant_type:"refresh_token",foo:"bar"},headers:{"Content-Type":"application/x-www-form-urlencoded"}}).success(function(a){d.testingAccessToken=a.access_token,d.$log.info("[O172]: test access token is "+d.testingAccessToken),d.isAuthInProgress=!1,c.resolve(a)}).error(function(a,b){d.isAuthInProgress=!1;var e="[O191] problem refreshing test refresh token "+b+" "+a.error+" "+a.error_description;d.$log.error(e),c.reject(e)})},a.prototype.refreshCallback=function(a,b){this.isAuthInProgress=!1,console.log("o207 authed");var c=this.$window.gapi.auth.getToken();if(null==a){var d="[O248] null response. Possible network error.";a={error:d},b.reject(d)}if(c||(this.$log.error("[O196] There is a problem that authorize has returned without an access token. Poss. access denied by user or invalid client id or wrong origin URL? Reason = "+a.error),"immediate_failed"==a.error&&(this.immediateMode=!1,this.refreshAccessToken(b)),this.refreshException=a.error,b.reject(a.error)),c.access_token&&null!=c.access_token&&(this.isAuthedYet=!0,this.testingAccessToken=void 0,b.resolve(c)),1==this.tokenRefreshPolicy){var e=c.expires_in;this.$log.log("[O203] token will refresh after "+950*e+"ms"),setTimeout(this.refreshAccessToken,950*e),this.testStatus="O203"}},a.prototype.isGapiLoaded=function(){return this.$window.gapi&&this.$window.gapi.auth},a}());a.OauthService=b}(NgGapi||(NgGapi={})),NgGapi.Config=function(){var a,b,c,d,e,f,g=0,h=void 0,i=!1;return{setScopes:function(b){a=b},setClientID:function(a){b=a},setTokenRefreshPolicy:function(a){g=a},setImmediateMode:function(a){i=a},setTestingRefreshToken:function(a){c=a},setGetAccessTokenFunction:function(a){h=a},setTestingAccessToken:function(a){d=a},setTestingClientSecret:function(a){e=a},setPopupBlockedFunction:function(a){f=a},$get:function(){var j=angular.injector(["ng"]),k=j.get("$log"),l=j.get("$window"),m=j.get("$http"),n=j.get("$timeout"),o=j.get("$q");return new NgGapi.OauthService(a,b,g,i,h,c,d,e,f,k,l,m,n,o)}}},angular.module("ngm.NgGapi",[]);var NgGapi;!function(a){var b=function(){function a(a,b,c,d,e,f){this.$log=a,this.$http=b,this.$timeout=c,this.$interval=d,this.$q=e,this.OauthService=f,this.sig="HttpService",this.RETRY_COUNT=10,this.INTERVAL_NORMAL=10,this.INTERVAL_THROTTLE=500,this.INTERVAL_MAX=1500,this.isQueueMode=!0,this.queue=[],this.testStatus="foo"}return a.prototype.getOauthService=function(){return this.OauthService},a.prototype.get$http=function(){return this.$http},a.prototype.doHttp=function(a){var b=this.$q.defer();return this.isQueueMode?this.add2q(a,b,this.RETRY_COUNT):this._doHttp(a,b,this.RETRY_COUNT),b.promise},a.prototype.add2q=function(a,b,c){var d=this;this.queue.push({c:a,d:b,r:c}),this.queuePromise||(this.queuePromise=this.$interval(function(){d.dq()},this.queueInterval))},a.prototype.throttleDown=function(){var a=this;this.queueInterval==this.INTERVAL_NORMAL&&(this.queueInterval=this.INTERVAL_THROTTLE),this.queuePromise&&this.$interval.cancel(this.queuePromise),this.queueInterval=this.INTERVAL_MAX,this.queuePromise=this.$interval(function(){a.dq()},this.queueInterval)},a.prototype.throttleUp=function(){var a=this;this.queueInterval!=this.INTERVAL_NORMAL&&(this.queuePromise&&this.$interval.cancel(this.queuePromise),this.queueInterval=.8*this.queueInterval,this.queueInterval<this.INTERVAL_NORMAL&&(this.queueInterval=this.INTERVAL_NORMAL),this.queuePromise=this.$interval(function(){a.dq()},this.queueInterval))},a.prototype.dq=function(){if(0==this.queue.length)return this.queueInterval=this.INTERVAL_NORMAL,this.$interval.cancel(this.queuePromise),void(this.queuePromise=void 0);var a=this.queue[0];this.queue.splice(0,1),this._doHttp(a.c,a.d,a.r)},a.prototype._doHttp=function(a,b,c){var d=this;a.headers||(a.headers={}),this.OauthService.getAccessToken().then(function(e){a.headers.Authorization="Bearer "+e.access_token;var f=d.$http(a);f.success(function(a,e,f,g,h){return d.throttleUp(),a.nextPageToken?(b.notify({data:a,configObject:g,headers:f,status:e,statusText:h}),g.params||(g.params={}),g.params.pageToken=a.nextPageToken,d._doHttp(g,b,c)):void b.resolve({data:a,configObject:g,headers:f,status:e,statusText:h})}),f.error(function(a,e,f,g,h){d.errorHandler(a,e,f,g,h,b,c)})},function(a){b.reject("401 no access token "+a)})},a.prototype.errorHandler=function(a,b,c,d,e,f,g){var h=this;return a&&null!=a||(a={error:{message:"[H242] null response. Possible network failure."}}),404==b?void f.reject(b+" "+a.error.message):401==b?(this.$log.warn("[H116] Need to acquire a new Access Token and resubmit"),void this.OauthService.refreshAccessToken().then(function(){h._doHttp(d,f,g)},function(a){f.reject(a)})):501==b?void(--g>0?this.sleep(1e3).then(function(){h._doHttp(d,f,g)}):f.reject(b+" "+a.error.message)):403==b&&a.error.message.toLowerCase().indexOf("rate limit")>-1?(this.$log.warn("[H153] 403 rate limit. requeuing retryConter = "+g),this.throttleDown(),void this.add2q(d,f,g)):void f.reject(b+" "+a.error.message)},a.prototype.sleep=function(a){var b=this.$q.defer();return this.$timeout(function(){b.resolve(0)},a),b.promise},a.$inject=["$log","$http","$timeout","$interval","$q","OauthService"],a}();a.HttpService=b}(NgGapi||(NgGapi={})),angular.module("ngm.NgGapi").service("HttpService",NgGapi.HttpService);