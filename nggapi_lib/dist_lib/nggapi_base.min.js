"use strict";var NgGapi;!function(a){!function(a){a[a.RETRY=0]="RETRY",a[a.FAIL=1]="FAIL"}(a.NoAccessTokenPolicy||(a.NoAccessTokenPolicy={}));a.NoAccessTokenPolicy;!function(a){a[a.ON_DEMAND=0]="ON_DEMAND",a[a.PRIOR_TO_EXPIRY=1]="PRIOR_TO_EXPIRY"}(a.TokenRefreshPolicy||(a.TokenRefreshPolicy={}));var b=(a.TokenRefreshPolicy,function(){function a(a,b,c,d,e,f,g,h,i,j,k,l,m,n){this.scopes=a,this.clientId=b,this.tokenRefreshPolicy=c,this.noAccesTokenPolicy=d,this.immediateMode=e,this.ownGetAccessTokenFunction=f,this.testingRefreshToken=g,this.testingAccessToken=h,this.testingClientSecret=i,this.popupBlockedFunction=j,this.$log=k,this.$window=l,this.$http=m,this.$timeout=n,this.sig="OauthService",this.isAuthInProgress=!1,this.isAuthedYet=!1,this.GAPI_RETRY_MS=200,this.POPUP_BLOCKER_ALERT_DELAY=1e4,this.POPUP_BLOCKER_ALERT_TEXT="This app is requesting your authorization, but isn't able to, possibly because you have blocked popups from this site.",f&&(this.getAccessToken=f),e&&(this.isAuthedYet=!0)}return a.prototype.getAccessToken=function(){return console.log("o88 gAT"),this.testingAccessToken?this.testingAccessToken:this.testingRefreshToken?(this.refreshAccessTokenUsingTestRefreshToken(this.testingRefreshToken,this.testingClientSecret),"!RETRY=1000"):this.isGapiLoaded()?this.refreshException?"!FAIL "+this.refreshException:this.$window.gapi.auth.getToken()&&this.$window.gapi.auth.getToken().access_token&&null!=this.$window.gapi.auth.getToken().access_token?this.$window.gapi.auth.getToken().access_token:(this.refreshAccessToken(),0==this.noAccesTokenPolicy?"!FAIL":"!RETRY="+this.noAccesTokenPolicy):(this.$log.warn("[O55] waiting for the gapi script to download"),void(this.testStatus="O55"))},a.prototype.refreshAccessToken=function(){var a=this;if(this.isAuthInProgress)return this.$log.warn("[O75] refresh access token suppressed because there is already such a request in progress"),void(this.testStatus="O75");if(this.refreshException=void 0,!this.isGapiLoaded())return this.$log.warn("[O81] gapi not yet loaded, retrying..."),this.testStatus="O81",void this.$timeout(function(){a.refreshAccessToken()},this.GAPI_RETRY_MS);this.isAuthInProgress=!0;try{if(this.POPUP_BLOCKER_ALERT_DELAY>0)var b=this.$timeout(function(){console.log("auth timed out after "+a.POPUP_BLOCKER_ALERT_DELAY+"ms. Resetting anti-concurrent-calls flag so the next call to getAccesstoken() will trigger a fresh request"),a.popupBlockedFunction?a.popupBlockedFunction():a.POPUP_BLOCKER_ALERT_TEXT&&alert(a.POPUP_BLOCKER_ALERT_TEXT),a.isAuthInProgress=!1},this.POPUP_BLOCKER_ALERT_DELAY);this.$window.gapi.auth.authorize({client_id:this.clientId,scope:this.scopes,immediate:this.isAuthedYet},function(c){a.$timeout.cancel(b),a.refreshCallback(c)})}catch(c){this.$log.error("[O153] exception calling gapi.auth.authorize "+c),this.isAuthInProgress=!1}},a.prototype.refreshAccessTokenUsingTestRefreshToken=function(a,b){var c=this;if(this.isAuthInProgress)return this.$log.warn("[O143] refresh access token suppressed because there is already such a request in progress"),void(this.testStatus="O143");this.isAuthInProgress=!0;var d="https://www.googleapis.com/oauth2/v3/token";this.$http({method:"POST",url:d,params:{client_id:encodeURI(this.clientId),client_secret:encodeURI(b),refresh_token:a,grant_type:"refresh_token",foo:"bar"},headers:{"Content-Type":"application/x-www-form-urlencoded"}}).success(function(a){c.testingAccessToken=a.access_token,c.$log.info("[O172]: test access token is "+c.testingAccessToken),c.isAuthInProgress=!1}).error(function(a,b){c.isAuthInProgress=!1,c.$log.error("[O191] problem refreshing test refresh token "+b+" "+a.error+" "+a.error_description)})},a.prototype.refreshCallback=function(a){this.isAuthInProgress=!1,console.log("o207 authed");var b=this.$window.gapi.auth.getToken();if(a=null,null==a&&(a={error:"[O248] null response. Possible network error."}),!b)return this.$log.error("[O196] There is a problem that authorize has returned without an access token. Poss. access denied by user or invalid client id or wrong origin URL? Reason = "+a.error),"immediate_failed"==a.error&&(this.immediateMode=!1,this.refreshAccessToken()),void(this.refreshException=a.error);if(b.access_token&&null!=b.access_token&&(this.isAuthedYet=!0,this.testingAccessToken=void 0),1==this.tokenRefreshPolicy){var c=b.expires_in;this.$log.log("[O203] token will refresh after "+950*c+"ms"),setTimeout(this.refreshAccessToken,950*c),this.testStatus="O203"}},a.prototype.isGapiLoaded=function(){return this.$window.gapi&&this.$window.gapi.auth},a}());a.OauthService=b}(NgGapi||(NgGapi={})),NgGapi.Config=function(){var a,b,c,d,e,f,g=0,h=500,i=void 0,j=!1;return{setScopes:function(b){a=b},setClientID:function(a){b=a},setTokenRefreshPolicy:function(a){g=a},setNoAccessTokenPolicy:function(a){h=a},setImmediateMode:function(a){j=a},setTestingRefreshToken:function(a){c=a},setGetAccessTokenFunction:function(a){i=a},setTestingAccessToken:function(a){d=a},setTestingClientSecret:function(a){e=a},setPopupBlockedFunction:function(a){f=a},$get:function(){var k=angular.injector(["ng"]),l=k.get("$log"),m=k.get("$window"),n=k.get("$http"),o=k.get("$timeout");return new NgGapi.OauthService(a,b,g,h,j,i,c,d,e,f,l,m,n,o)}}},angular.module("ngm.NgGapi",[]);var NgGapi;!function(a){var b=function(){function a(a,b,c,d,e,f){this.$log=a,this.$http=b,this.$timeout=c,this.$interval=d,this.$q=e,this.OauthService=f,this.sig="HttpService",this.RETRY_COUNT=10,this.INTERVAL_NORMAL=10,this.INTERVAL_THROTTLE=500,this.INTERVAL_MAX=1500,this.isQueueMode=!0,this.queue=[],this.testStatus="foo"}return a.prototype.getOauthService=function(){return this.OauthService},a.prototype.get$http=function(){return this.$http},a.prototype.doHttp=function(a){var b=this.$q.defer();return this.isQueueMode?this.add2q(a,b,this.RETRY_COUNT):this._doHttp(a,b,this.RETRY_COUNT),b.promise},a.prototype.add2q=function(a,b,c){var d=this;this.queue.push({c:a,d:b,r:c}),this.queuePromise||(this.queuePromise=this.$interval(function(){d.dq()},this.queueInterval))},a.prototype.throttleDown=function(){var a=this;this.queueInterval==this.INTERVAL_NORMAL&&(this.queueInterval=this.INTERVAL_THROTTLE),this.queuePromise&&this.$interval.cancel(this.queuePromise),this.queueInterval=this.INTERVAL_MAX,this.queuePromise=this.$interval(function(){a.dq()},this.queueInterval)},a.prototype.throttleUp=function(){var a=this;this.queueInterval!=this.INTERVAL_NORMAL&&(this.queuePromise&&this.$interval.cancel(this.queuePromise),this.queueInterval=.8*this.queueInterval,this.queueInterval<this.INTERVAL_NORMAL&&(this.queueInterval=this.INTERVAL_NORMAL),this.queuePromise=this.$interval(function(){a.dq()},this.queueInterval))},a.prototype.dq=function(){if(0==this.queue.length)return this.queueInterval=this.INTERVAL_NORMAL,this.$interval.cancel(this.queuePromise),void(this.queuePromise=void 0);var a=this.queue[0];this.queue.splice(0,1),this._doHttp(a.c,a.d,a.r)},a.prototype._doHttp=function(a,b,c){var d=this;a.headers||(a.headers={});var e=this.OauthService.getAccessToken();if(e&&0!=e.indexOf("!FAIL")&&0!=e.indexOf("!RETRY=")){a.headers.Authorization="Bearer "+this.OauthService.getAccessToken();var f=this.$http(a);return f.success(function(a,e,f,g,h){return d.throttleUp(),a.nextPageToken?(b.notify({data:a,configObject:g,headers:f,status:e,statusText:h}),g.params||(g.params={}),g.params.pageToken=a.nextPageToken,d._doHttp(g,b,c)):void b.resolve({data:a,configObject:g,headers:f,status:e,statusText:h})}),void f.error(function(a,e,f,g,h){d.errorHandler(a,e,f,g,h,b,c)})}if(e&&0==e.indexOf("!FAIL"))b.reject("401 no access token "+e.substr(5));else{var g=e?e.replace("!RETRY=",""):500;this.sleep(+g).then(function(){d._doHttp(a,b,c)})}},a.prototype.errorHandler=function(a,b,c,d,e,f,g){var h=this;return a&&null!=a||(a={error:{message:"[H242] null response. Possible network failure."}}),404==b?void f.reject(b+" "+a.error.message):401==b?(this.$log.warn("[H116] Need to acquire a new Access Token and resubmit"),this.OauthService.refreshAccessToken(),void(--g>0?this.sleep(2e3).then(function(){h._doHttp(d,f,g)}):f.reject(b+" "+a.error.message))):501==b?void(--g>0?this.sleep(1e3).then(function(){h._doHttp(d,f,g)}):f.reject(b+" "+a.error.message)):403==b&&a.error.message.toLowerCase().indexOf("rate limit")>-1?(this.$log.warn("[H153] 403 rate limit. requeuing retryConter = "+g),this.throttleDown(),void this.add2q(d,f,g)):void f.reject(b+" "+a.error.message)},a.prototype.sleep=function(a){var b=this.$q.defer();return this.$timeout(function(){b.resolve(0)},a),b.promise},a.$inject=["$log","$http","$timeout","$interval","$q","OauthService"],a}();a.HttpService=b}(NgGapi||(NgGapi={})),angular.module("ngm.NgGapi").service("HttpService",NgGapi.HttpService);