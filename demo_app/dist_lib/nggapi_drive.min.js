"use strict";var NgGapi;!function(a){var b=function(){function a(a,b,c,d){this.$log=a,this.$timeout=b,this.$q=c,this.HttpService=d,this.sig="DriveService",this.files={self:this,get:this.filesGet,insert:this.filesInsert,insertWithContent:this.filesInsertWithContent,list:this.filesList,update:this.filesUpdate,patch:this.filesPatch,trash:this.filesTrash,untrash:this.filesUntrash,del:this.filesDelete,watch:this.filesWatch,touch:this.filesTouch,emptyTrash:this.filesEmptyTrash},this.about={self:this,get:this.aboutGet},this.changes={self:this,get:this.changesGet,list:this.changesList,watch:this.changesWatch},this.children={self:this,get:this.childrenGet,del:this.childrenDelete,insert:this.childrenInsert,list:this.childrenList},this.parents={self:this,get:this.parentsGet,del:this.parentsDelete,insert:this.parentsInsert,list:this.parentsList},this.permissions={self:this,get:this.permissionsGet,del:this.permissionsDelete,insert:this.permissionsInsert,update:this.permissionsUpdate,patch:this.permissionsPatch,list:this.permissionsList,getIdForEmail:this.permissionsGetIdForEmail},this.revisions={self:this,get:this.revisionsGet,del:this.revisionsDelete,update:this.revisionsUpdate,patch:this.revisionsPatch,list:this.revisionsList},this.self=this,this.RESOURCE_TOKEN="reSource",this.urlBase="https://www.googleapis.com/drive/v2/"+this.RESOURCE_TOKEN+"/:id",this.filesUrl=this.urlBase.replace(this.RESOURCE_TOKEN,"files"),this.filesUploadUrl="https://www.googleapis.com/upload/drive/v2/files",this.changesUrl=this.urlBase.replace(this.RESOURCE_TOKEN,"changes"),this.aboutUrl=this.urlBase.replace(this.RESOURCE_TOKEN,"about"),this.childrenUrl=this.urlBase.replace(this.RESOURCE_TOKEN,"files/:fid/children"),this.parentsUrl=this.urlBase.replace(this.RESOURCE_TOKEN,"files/:cid/parents"),this.permissionsUrl=this.urlBase.replace(this.RESOURCE_TOKEN,"files/:fid/permissions"),this.permissionIdsUrl=this.urlBase.replace(this.RESOURCE_TOKEN,"permissionIds"),this.revisionsUrl=this.urlBase.replace(this.RESOURCE_TOKEN,"files/:fid/revisions"),this.urlTrashSuffix="/trash",this.urlUntrashSuffix="/untrash",this.urlWatchSuffix="/watch",this.urlTouchSuffix="/touch",this.lastFile={id:"noid"}}return a.prototype.getHttpService=function(){return this.HttpService},a.prototype.aboutGet=function(a){var b=this,c={method:"GET",url:this.self.aboutUrl.replace(":id",""),params:a},d=this.self.HttpService.doHttp(c),e={promise:d,data:{},headers:void 0};return d.then(function(a){e.headers=a.headers,b.self.transcribeProperties(a.data,e)}),e},a.prototype.changesGet=function(a){var b=this,c={method:"GET",url:this.self.changesUrl.replace(":id",""+a.changeId)},d=this.self.HttpService.doHttp(c),e={promise:d,data:{},headers:void 0};return d.then(function(a){e.headers=a.headers,b.self.transcribeProperties(a.data,e)}),e},a.prototype.changesList=function(a){a&&a.fields&&-1==a.fields.indexOf("nextPageToken")&&this.self.$log.warn('[D145] You have tried to list changes with specific fields, but forgotten to include "nextPageToken" which will crop your results to just one page.');var b={method:"GET",url:this.self.changesUrl.replace(":id",""),params:a},c=this.self.HttpService.doHttp(b),d={promise:c,data:[],headers:void 0};return c.then(function(a){if(a.data&&a.data.items)for(var b=a.data.items.length,c=0;b>c;c++)d.data.push(a.data.items[c])},void 0,function(a){for(var b=a.data.items.length,c=0;b>c;c++)d.data.push(a.data.items[c])}),d},a.prototype.changesWatch=function(a){var b=this;this.self.$log.warn("[D137] NB files.watch is not available as a CORS endpoint for browser clients.");var c={method:"POST",url:this.self.changesUrl.replace(":id","")+this.self.urlWatchSuffix,data:a},d=this.self.HttpService.doHttp(c),e={promise:d,data:void 0,headers:void 0};return d.then(function(a){e.headers=a.headers,b.self.transcribeProperties(a.data,e),b.self.lastFile=a.data}),e},a.prototype.filesGet=function(a){var b=this,c={method:"GET",url:this.self.filesUrl.replace(":id",a.fileId),params:a},d=this.self.HttpService.doHttp(c),e={promise:d,data:{},headers:void 0};return d.then(function(c){e.headers=c.headers,"media"==a.alt?e.data.media=c.data:(b.self.transcribeProperties(c.data,e),b.self.lastFile=c.data)}),e},a.prototype.filesList=function(a,b){if(a&&a.fields&&-1==a.fields.indexOf("nextPageToken")&&this.self.$log.warn('[D82] You have tried to list files with specific fields, but forgotten to include "nextPageToken" which will crop your results to just one page.'),b){var c="trashed = false";a.q=a.q?a.q+" and "+c:c}var d={method:"GET",url:this.self.filesUrl.replace(":id",""),params:a},e=this.self.HttpService.doHttp(d),f={promise:e,data:[],headers:void 0};return e.then(function(a){if(a.data&&a.data.items)for(var b=a.data.items.length,c=0;b>c;c++)f.data.push(a.data.items[c])},void 0,function(a){for(var b=a.data.items.length,c=0;b>c;c++)f.data.push(a.data.items[c])}),f},a.prototype.filesInsertWithContent=function(a,b,c,d,e){var f,g=this;if(!b||!b.uploadType){var h="[D314] Missing params (which must contain uploadType)";return this.self.reject(h)}if(!c){var h="[D318] Missing content";return this.self.reject(h)}try{f=this.self.buildUploadConfigObject(a,b,c,d,!0),f.method="POST",f.url=this.self.filesUploadUrl}catch(i){return this.self.reject(i)}var j=this.self.HttpService.doHttp(f),k={promise:j,data:{},headers:void 0};return j.then(function(b){k.headers=b.headers,(void 0==e||1==e)&&(a.id=b.data.id),g.self.transcribeProperties(b.data,k),g.self.lastFile=b.data}),k},a.prototype.filesInsert=function(a,b){var c=this,d={method:"POST",url:this.self.filesUrl.replace(":id",""),data:a},e=this.self.HttpService.doHttp(d),f={promise:e,data:{},headers:void 0};return e.then(function(d){f.headers=d.headers,(void 0==b||1==b)&&(a.id=d.data.id),c.self.transcribeProperties(d.data,f),c.self.lastFile=d.data}),f},a.prototype.filesUpdate=function(a,b,c,d){var e,f=this;if(b&&b.fileId)e=b.fileId;else{if(!a.id){var g="[D193] Missing fileId";return this.self.reject(g)}e=a.id}var h;if(b&&b.uploadType)try{h=this.self.buildUploadConfigObject(a,b,c,d,!1),h.method="PUT",h.url=this.self.filesUploadUrl+"/"+b.fileId}catch(i){return this.self.reject(i)}else h={method:"PUT",url:this.self.filesUrl.replace(":id",e),data:a};var j=this.self.HttpService.doHttp(h),k={promise:j,data:{},headers:void 0};return j.then(function(a){k.headers=a.headers,f.self.transcribeProperties(a.data,k),f.self.lastFile=a.data}),k},a.prototype.filesPatch=function(a){var b=this;if(!a||!a.fileId){var c="[D230] Missing fileId";return this.self.reject(c)}var d={method:"PATCH",url:this.self.filesUrl.replace(":id",a.fileId),data:a.resource},e=this.self.HttpService.doHttp(d),f={promise:e,data:{},headers:void 0};return e.then(function(a){f.headers=a.headers,b.self.transcribeProperties(a.data,f),b.self.lastFile=a.data}),f},a.prototype.filesTrash=function(a){var b=this;if(!a||!a.fileId){var c="[D225] Missing fileId";return this.self.reject(c)}var d={method:"POST",url:this.self.filesUrl.replace(":id",a.fileId)+this.self.urlTrashSuffix},e=this.self.HttpService.doHttp(d),f={promise:e,data:{},headers:void 0};return e.then(function(a){f.headers=a.headers,b.self.transcribeProperties(a.data,f),b.self.lastFile=a.data}),f},a.prototype.filesUntrash=function(a){var b=this;if(!a||!a.fileId){var c="[D251] Missing fileId";return this.self.reject(c)}var d={method:"POST",url:this.self.filesUrl.replace(":id",a.fileId)+this.self.urlUntrashSuffix},e=this.self.HttpService.doHttp(d),f={promise:e,data:{},headers:void 0};return e.then(function(a){f.headers=a.headers,b.self.transcribeProperties(a.data,f),b.self.lastFile=a.data}),f},a.prototype.filesDelete=function(a){if(!a||!a.fileId){var b="[D222] Missing fileId";return this.self.reject(b)}var c={method:"delete",url:this.self.filesUrl.replace(":id",a.fileId)},d=this.self.HttpService.doHttp(c),e={promise:d,data:{},headers:void 0};return d.then(function(a){e.headers=a.headers}),e},a.prototype.filesWatch=function(a,b){var c=this;if(this.self.$log.warn("[D334] NB files.watch is not available as a CORS endpoint for browser clients."),!a||!a.fileId){var d="[D302] Missing id";return this.self.reject(d)}var e={method:"POST",url:this.self.filesUrl.replace(":id",a.fileId)+this.self.urlWatchSuffix,params:a,data:b},f=this.self.HttpService.doHttp(e),g={promise:f,data:void 0,headers:void 0};return f.then(function(a){g.headers=a.headers,c.self.transcribeProperties(a.data,g),c.self.lastFile=a.data}),g},a.prototype.filesTouch=function(a){var b=this;if(!a||!a.fileId){var c="[D329] Missing fileId";return this.self.reject(c)}var d={method:"POST",url:this.self.filesUrl.replace(":id",a.fileId)+this.self.urlTouchSuffix},e=this.self.HttpService.doHttp(d),f={promise:e,data:{},headers:void 0};return e.then(function(a){f.headers=a.headers,b.self.transcribeProperties(a.data,f),b.self.lastFile=a.data}),f},a.prototype.filesEmptyTrash=function(){var a={method:"DELETE",url:this.self.filesUrl.replace(":id","trash")},b=this.self.HttpService.doHttp(a),c={promise:b,data:{},headers:void 0};return b.then(function(a){c.headers=a.headers}),c},a.prototype.childrenGet=function(a){var b=this;if(!a||!a.folderId){var c="[D679] Missing params.folderId";return this.self.reject(c)}if(!a.childId){var c="[D683] Missing childId";return this.self.reject(c)}var d={method:"GET",url:this.self.childrenUrl.replace(":fid",a.folderId).replace(":id",a.childId),params:a},e=this.self.HttpService.doHttp(d),f={promise:e,data:{},headers:void 0};return e.then(function(a){f.headers=a.headers,b.self.transcribeProperties(a.data,f),b.self.lastFile=a.data}),f},a.prototype.childrenList=function(a,b){if(a&&a.fields&&-1==a.fields.indexOf("nextPageToken")&&this.self.$log.warn('[D712] You have tried to list children with specific fields, but forgotten to include "nextPageToken" which will crop your results to just one page.'),b){var c="trashed = false";a.q=a.q?a.q+" and "+c:c}var d={method:"GET",url:this.self.childrenUrl.replace(":fid",a.folderId).replace(":id",""),params:a},e=this.self.HttpService.doHttp(d),f={promise:e,data:[],headers:void 0};return e.then(function(a){if(a.data&&a.data.items)for(var b=a.data.items.length,c=0;b>c;c++)f.data.push(a.data.items[c])},void 0,function(a){for(var b=a.data.items.length,c=0;b>c;c++)f.data.push(a.data.items[c])}),f},a.prototype.childrenInsert=function(a,b){var c=this;if(!a||!a.folderId){var d="[D763] Missing params.folderId";return this.self.reject(d)}if(!b||!b.id){var d="[D767] Missing childId";return this.self.reject(d)}var e={method:"POST",url:this.self.childrenUrl.replace(":fid",a.folderId).replace(":id",""),data:b},f=this.self.HttpService.doHttp(e),g={promise:f,data:{},headers:void 0};return f.then(function(a){g.headers=a.headers,c.self.transcribeProperties(a.data,g),c.self.lastFile=a.data}),g},a.prototype.childrenDelete=function(a){if(!a||!a.folderId){var b="[D799] Missing fileId";return this.self.reject(b)}if(!a||!a.childId){var b="[D803] Missing childId";return this.self.reject(b)}var c={method:"delete",url:this.self.childrenUrl.replace(":fid",a.folderId).replace(":id",a.childId)},d=this.self.HttpService.doHttp(c),e={promise:d,data:{},headers:void 0};return d.then(function(a){e.headers=a.headers}),e},a.prototype.parentsGet=function(a){var b=this;if(!a||!a.fileId){var c="[D874] Missing params.fileId";return this.self.reject(c)}if(!a.parentId){var c="[D878] Missing parentId";return this.self.reject(c)}var d={method:"GET",url:this.self.parentsUrl.replace(":cid",a.fileId).replace(":id",a.parentId),params:a},e=this.self.HttpService.doHttp(d),f={promise:e,data:{},headers:void 0};return e.then(function(a){f.headers=a.headers,b.self.transcribeProperties(a.data,f),b.self.lastFile=a.data}),f},a.prototype.parentsList=function(a,b){if(a&&a.fields&&-1==a.fields.indexOf("nextPageToken")&&this.self.$log.warn('[D712] You have tried to list parents with specific fields, but forgotten to include "nextPageToken" which will crop your results to just one page.'),b){var c="trashed = false";a.q=a.q?a.q+" and "+c:c}var d={method:"GET",url:this.self.parentsUrl.replace(":cid",a.fileId).replace(":id",""),params:a},e=this.self.HttpService.doHttp(d),f={promise:e,data:[],headers:void 0};return e.then(function(a){if(a.data&&a.data.items)for(var b=a.data.items.length,c=0;b>c;c++)f.data.push(a.data.items[c])},void 0,function(a){for(var b=a.data.items.length,c=0;b>c;c++)f.data.push(a.data.items[c])}),f},a.prototype.parentsInsert=function(a,b){var c=this;if(!a||!a.fileId){var d="[D971] Missing params.fileId";return this.self.reject(d)}if(!b||!b.id){var d="[D975] Missing parentId";return this.self.reject(d)}var e={method:"POST",url:this.self.parentsUrl.replace(":cid",a.fileId).replace(":id",""),data:b},f=this.self.HttpService.doHttp(e),g={promise:f,data:{},headers:void 0};return f.then(function(a){g.headers=a.headers,c.self.transcribeProperties(a.data,g),c.self.lastFile=a.data}),g},a.prototype.parentsDelete=function(a){if(!a||!a.fileId){var b="[D1007] Missing fileId";return this.self.reject(b)}if(!a||!a.parentId){var b="[D1010] Missing parentId";return this.self.reject(b)}var c={method:"delete",url:this.self.parentsUrl.replace(":cid",a.fileId).replace(":id",a.parentId)},d=this.self.HttpService.doHttp(c),e={promise:d,data:{},headers:void 0};return d.then(function(a){e.headers=a.headers}),e},a.prototype.permissionsGet=function(a){var b=this;if(!a||!a.fileId){var c="[D1045] Missing params.fileId";return this.self.reject(c)}if(!a.permissionId){var c="[D1049] Missing permissionId";return this.self.reject(c)}var d={method:"GET",url:this.self.permissionsUrl.replace(":fid",a.fileId).replace(":id",a.permissionId),params:a},e=this.self.HttpService.doHttp(d),f={promise:e,data:{},headers:void 0};return e.then(function(a){f.headers=a.headers,b.self.transcribeProperties(a.data,f),b.self.lastFile=a.data}),f},a.prototype.permissionsList=function(a){a&&a.fields&&-1==a.fields.indexOf("nextPageToken")&&this.self.$log.warn('[D1091] You have tried to list permissions with specific fields, but forgotten to include "nextPageToken" which will crop your results to just one page.');var b={method:"GET",url:this.self.permissionsUrl.replace(":fid",a.fileId).replace(":id",""),params:a},c=this.self.HttpService.doHttp(b),d={promise:c,data:[],headers:void 0};return c.then(function(a){if(a.data&&a.data.items)for(var b=a.data.items.length,c=0;b>c;c++)d.data.push(a.data.items[c])},void 0,function(a){for(var b=a.data.items.length,c=0;b>c;c++)d.data.push(a.data.items[c])}),d},a.prototype.permissionsInsert=function(a,b){var c=this;if(!b||!b.fileId){var d="[D1141] Missing params.fileId";return this.self.reject(d)}if(!a||!a.type||!a.role){var d="[D1145] Missing role or type";return this.self.reject(d)}var e={method:"POST",url:this.self.permissionsUrl.replace(":fid",b.fileId).replace(":id",""),data:a},f=this.self.HttpService.doHttp(e),g={promise:f,data:{},headers:void 0};return f.then(function(a){g.headers=a.headers,c.self.transcribeProperties(a.data,g),c.self.lastFile=a.data}),g},a.prototype.permissionsDelete=function(a){if(!a||!a.fileId){var b="[D1177] Missing fileId";return this.self.reject(b)}if(!a||!a.permissionId){var b="[D1181] Missing permissionId";return this.self.reject(b)}var c={method:"delete",url:this.self.permissionsUrl.replace(":fid",a.fileId).replace(":id",a.permissionId)},d=this.self.HttpService.doHttp(c),e={promise:d,data:{},headers:void 0};return d.then(function(a){e.headers=a.headers}),e},a.prototype.permissionsUpdate=function(a,b){var c,d=this;if(b&&b.permissionId)c=b.permissionId;else{if(!a.id){var e="[D1214] Missing permissionId";return this.self.reject(e)}c=a.id}var f;f={method:"PUT",url:this.self.permissionsUrl.replace(":fid",b.fileId).replace(":id",c),data:a};var g=this.self.HttpService.doHttp(f),h={promise:g,data:{},params:b,headers:void 0};return g.then(function(a){h.headers=a.headers,d.self.transcribeProperties(a.data,h),d.self.lastFile=a.data}),h},a.prototype.permissionsPatch=function(a,b){var c,d=this;if(b&&b.permissionId)c=b.permissionId;else{if(!a.id){var e="[D1254] Missing permissionId";return this.self.reject(e)}c=a.id}var f;f={method:"PATCH",url:this.self.permissionsUrl.replace(":fid",b.fileId).replace(":id",c),data:a};var g=this.self.HttpService.doHttp(f),h={promise:g,data:{},params:b,headers:void 0};return g.then(function(a){h.headers=a.headers,d.self.transcribeProperties(a.data,h),d.self.lastFile=a.data}),h},a.prototype.permissionsGetIdForEmail=function(a){var b,c=this;b={method:"GET",url:this.self.permissionIdsUrl.replace(":id",a)};var d=this.self.HttpService.doHttp(b),e={promise:d,data:{},headers:void 0};return d.then(function(a){e.headers=a.headers,c.self.transcribeProperties(a.data,e),c.self.lastFile=a.data}),e},a.prototype.revisionsGet=function(a){var b=this;if(!a||!a.fileId){var c="[D1310] Missing params.fileId";return this.self.reject(c)}if(!a.revisionId){var c="[D1314] Missing revisionId";return this.self.reject(c)}var d={method:"GET",url:this.self.revisionsUrl.replace(":fid",a.fileId).replace(":id",a.revisionId),params:a},e=this.self.HttpService.doHttp(d),f={promise:e,data:{},headers:void 0};return e.then(function(a){f.headers=a.headers,b.self.transcribeProperties(a.data,f),b.self.lastFile=a.data}),f},a.prototype.revisionsList=function(a){a&&a.fields&&-1==a.fields.indexOf("nextPageToken")&&this.self.$log.warn('[D1355] You have tried to list revisions with specific fields, but forgotten to include "nextPageToken" which will crop your results to just one page.');var b={method:"GET",url:this.self.revisionsUrl.replace(":fid",a.fileId).replace(":id",""),params:a},c=this.self.HttpService.doHttp(b),d={promise:c,data:[],headers:void 0};return c.then(function(a){if(a.data&&a.data.items)for(var b=a.data.items.length,c=0;b>c;c++)d.data.push(a.data.items[c])},void 0,function(a){for(var b=a.data.items.length,c=0;b>c;c++)d.data.push(a.data.items[c])}),d},a.prototype.revisionsDelete=function(a){if(!a||!a.fileId){var b="[D1393] Missing fileId";return this.self.reject(b)}if(!a||!a.revisionId){var b="[D1397] Missing revisionId";return this.self.reject(b)}var c={method:"delete",url:this.self.revisionsUrl.replace(":fid",a.fileId).replace(":id",a.revisionId)},d=this.self.HttpService.doHttp(c),e={promise:d,data:{},headers:void 0};return d.then(function(a){e.headers=a.headers}),e},a.prototype.revisionsUpdate=function(a,b){var c,d=this;if(b&&b.revisionId)c=b.revisionId;else{if(!a.id){var e="[D1435] Missing revisionId";return this.self.reject(e)}c=a.id}var f;f={method:"PUT",url:this.self.revisionsUrl.replace(":fid",b.fileId).replace(":id",c),data:a};var g=this.self.HttpService.doHttp(f),h={promise:g,data:{},params:b,headers:void 0};return g.then(function(a){h.headers=a.headers,d.self.transcribeProperties(a.data,h),d.self.lastFile=a.data}),h},a.prototype.revisionsPatch=function(a,b){var c,d=this;if(b&&b.revisionId)c=b.revisionId;else{if(!a.id){var e="[D1475] Missing revisionId";return this.self.reject(e)}c=a.id}var f;f={method:"PATCH",url:this.self.revisionsUrl.replace(":fid",b.fileId).replace(":id",c),data:a};var g=this.self.HttpService.doHttp(f),h={promise:g,data:{},params:b,headers:void 0};return g.then(function(a){h.headers=a.headers,d.self.transcribeProperties(a.data,h),d.self.lastFile=a.data}),h},a.prototype.reject=function(a){this.self.$log.error("NgGapi: "+a);var b=this.self.$q.defer();return b.reject(a),{data:void 0,promise:b.promise,headers:void 0}},a.prototype.buildUploadConfigObject=function(a,b,c,d,e){if("resumable"==b.uploadType)throw"[D136] resumable uploads are not currently supported";if(!("multipart"!=b.uploadType&&"media"!=b.uploadType||!e||a&&a.mimeType))throw"[D148] file metadata is missing mandatory mime type";var f="";if(d)if("string"==typeof d)f+="Content-Transfer-Encoding: "+d+"\r\n";else for(var g in d)f+=g+": "+d[g]+"\r\n";var h;if("multipart"==b.uploadType){var i="-------3141592ff65358979323846",j="\r\n--"+i+"\r\n",k="";e&&(k="Content-Type: "+a.mimeType+"\r\n");var l="\r\n--"+i+"--";h=j+"Content-Type: application/json\r\n\r\n"+JSON.stringify(a)+j+f+k+"\r\n"+c+l;var m={};m["Content-Type"]='multipart/mixed; boundary="-------3141592ff65358979323846"'}if("media"==b.uploadType){h=c;var m={};e&&(m["Content-Type"]=a.mimeType)}return{method:void 0,url:void 0,params:b,data:h,headers:m}},a.prototype.transcribeProperties=function(a,b){b.data||(b.data={}),"object"==typeof a?Object.keys(a).map(function(c){b.data[c]=a[c]}):b=a},a.$inject=["$log","$timeout","$q","HttpService"],a}();a.DriveService=b}(NgGapi||(NgGapi={})),angular.module("ngm.NgGapi").service("DriveService",NgGapi.DriveService);